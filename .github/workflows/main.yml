name: JPG Barcode Renamer CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libzbar0
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install streamlit pandas pillow opencv-python-headless pyzbar qrcode numpy
        pip install pytest flake8
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.cache,.git
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=.cache,.git
    
    - name: Test Python files compilation
      run: |
        python -m py_compile app.py
        python -m py_compile barcode_processor.py
        python -m py_compile desktop_app.py
        python -m py_compile launcher.py
        python -m py_compile build_exe.py
        python -m py_compile create_portable_app.py
        python -m py_compile create_sample_images.py
    
    - name: Test imports
      run: |
        python -c "import app; print('✓ app.py imports successfully')"
        python -c "import barcode_processor; print('✓ barcode_processor.py imports successfully')"
        python -c "import desktop_app; print('✓ desktop_app.py imports successfully')"
        python -c "import launcher; print('✓ launcher.py imports successfully')"

  package:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libzbar0
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install streamlit pandas pillow opencv-python-headless pyzbar qrcode numpy pyinstaller
    
    - name: Create portable package
      run: |
        python create_portable_app.py
    
    - name: Create distribution zip
      run: |
        mkdir -p release
        # Copy main files
        cp *.py release/
        cp *.md release/
        cp *.toml release/
        cp *.bat release/ 2>/dev/null || true
        cp *.sh release/ 2>/dev/null || true
        cp *.spec release/ 2>/dev/null || true
        
        # Copy .streamlit if exists
        if [ -d ".streamlit" ]; then
          cp -r .streamlit release/
        fi
        
        # Create requirements.txt
        cat > release/requirements.txt << 'EOF'
        streamlit>=1.48.1
        pandas>=2.3.1
        pillow>=11.3.0
        opencv-python>=4.12.0.88
        pyzbar>=0.1.9
        qrcode>=8.2
        numpy>=2.2.6
        pyinstaller>=6.15.0
        EOF
        
        # Create usage instructions
        cat > release/USAGE.txt << 'EOF'
        JPG Barcode Renamer - Usage Instructions
        =======================================
        
        Quick Start:
        1. Install Python 3.8+ from https://python.org
        2. Install dependencies: pip install -r requirements.txt
        3. Run Web App: python launcher.py (or streamlit run app.py)
        4. Run Desktop App: python desktop_app.py
        
        For Windows:
        - Double click: create_exe.bat (to build executable)
        - Or use the portable package from dist/ folder
        
        For Mac/Linux:
        - Run: chmod +x create_exe.sh && ./create_exe.sh
        - Or use: python create_portable_app.py
        
        Features:
        - Read barcodes/QR codes from JPG images
        - Automatically rename files based on barcode data
        - Support batch processing
        - Thai language interface
        - Both web and desktop versions available
        EOF
        
        # Create zip file
        cd release
        zip -r ../JPG_Barcode_Renamer.zip .
        cd ..
        
        # Also copy the portable package if it exists
        if [ -f "dist/JPG_Barcode_Renamer_Portable.zip" ]; then
          cp dist/JPG_Barcode_Renamer_Portable.zip .
        fi
    
    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: JPG-Barcode-Renamer-Package
        path: |
          JPG_Barcode_Renamer.zip
          JPG_Barcode_Renamer_Portable.zip
        retention-days: 30

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Create Dockerfile
      run: |
        cat > Dockerfile << 'EOF'
        FROM python:3.11-slim
        
        # Install system dependencies
        RUN apt-get update && apt-get install -y \
            libglib2.0-0 \
            libsm6 \
            libxext6 \
            libxrender-dev \
            libgomp1 \
            libzbar0 \
            && rm -rf /var/lib/apt/lists/*
        
        # Set working directory
        WORKDIR /app
        
        # Copy requirements and install dependencies
        COPY pyproject.toml .
        RUN pip install --no-cache-dir streamlit pandas pillow opencv-python-headless pyzbar qrcode numpy
        
        # Copy application files
        COPY app.py barcode_processor.py ./
        COPY .streamlit .streamlit/
        
        # Expose port
        EXPOSE 8501
        
        # Health check (install curl first)
        RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*
        HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
          CMD curl -f http://localhost:8501/ || exit 1
        
        # Run Streamlit
        CMD ["streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0", "--server.headless=true"]
        EOF
    
    - name: Build Docker image
      run: |
        docker build -t jpg-barcode-renamer:latest .
    
    - name: Test Docker image
      run: |
        # Start container in background
        docker run -d --name test-container -p 8501:8501 jpg-barcode-renamer:latest
        
        # Wait for container to start
        sleep 30
        
        # Test if the application is responding (simplified test)
        curl -f http://localhost:8501/ || echo "Health check failed but container might still be starting"
        
        # Show container logs
        docker logs test-container
        
        # Clean up
        docker stop test-container
        docker rm test-container

  release:
    runs-on: ubuntu-latest
    needs: [test, package]
    if: github.event_name == 'release'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: JPG-Barcode-Renamer-Package
    
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          JPG_Barcode_Renamer.zip
          JPG_Barcode_Renamer_Portable.zip
        body: |
          ## JPG Barcode Renamer Release
          
          ### Downloads:
          - `JPG_Barcode_Renamer.zip` - Complete source code with build scripts
          - `JPG_Barcode_Renamer_Portable.zip` - Ready-to-run portable package
          
          ### Quick Start:
          1. Download and extract the portable package
          2. Install Python 3.8+ and run: `pip install -r requirements.txt`
          3. For Web App: `python launcher.py`
          4. For Desktop App: `python desktop_app.py`
          
          ### Features:
          - Read barcodes/QR codes from JPG images
          - Automatically rename files based on barcode data
          - Thai language interface
          - Cross-platform support (Windows/Mac/Linux)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
